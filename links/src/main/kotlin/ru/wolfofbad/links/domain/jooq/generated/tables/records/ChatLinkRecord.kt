/*
 * This file is generated by jOOQ.
 */
package ru.wolfofbad.links.domain.jooq.generated.tables.records


import jakarta.validation.constraints.NotNull

import java.time.OffsetDateTime

import javax.annotation.processing.Generated

import org.jooq.Field
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.TableRecordImpl

import ru.wolfofbad.links.domain.jooq.generated.tables.ChatLink


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.18.13"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class ChatLinkRecord() : TableRecordImpl<ChatLinkRecord>(ChatLink.CHAT_LINK), Record3<Long?, Long?, OffsetDateTime?> {

    @get:NotNull
    open var chatId: Long?
        set(value): Unit = set(0, value)
    @org.jetbrains.annotations.NotNull
        get(): Long? = get(0) as Long?

    @get:NotNull
    open var linkId: Long?
        set(value): Unit = set(1, value)
    @org.jetbrains.annotations.NotNull
        get(): Long? = get(1) as Long?

    @get:NotNull
    open var lastUpdate: OffsetDateTime?
        set(value): Unit = set(2, value)
    @org.jetbrains.annotations.NotNull
        get(): OffsetDateTime? = get(2) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row3<Long?, Long?, OffsetDateTime?> = super.fieldsRow() as Row3<Long?, Long?, OffsetDateTime?>
    override fun valuesRow(): Row3<Long?, Long?, OffsetDateTime?> = super.valuesRow() as Row3<Long?, Long?, OffsetDateTime?>
    override fun field1(): Field<Long?> = ChatLink.CHAT_LINK.CHAT_ID
    override fun field2(): Field<Long?> = ChatLink.CHAT_LINK.LINK_ID
    override fun field3(): Field<OffsetDateTime?> = ChatLink.CHAT_LINK.LAST_UPDATE
    override fun component1(): Long? = chatId
    override fun component2(): Long? = linkId
    override fun component3(): OffsetDateTime? = lastUpdate
    override fun value1(): Long? = chatId
    override fun value2(): Long? = linkId
    override fun value3(): OffsetDateTime? = lastUpdate

    override fun value1(value: Long?): ChatLinkRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Long?): ChatLinkRecord {
        set(1, value)
        return this
    }

    override fun value3(value: OffsetDateTime?): ChatLinkRecord {
        set(2, value)
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: OffsetDateTime?): ChatLinkRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        return this
    }

    /**
     * Create a detached, initialised ChatLinkRecord
     */
    constructor(chatId: Long? = null, linkId: Long? = null, lastUpdate: OffsetDateTime? = null): this() {
        this.chatId = chatId
        this.linkId = linkId
        this.lastUpdate = lastUpdate
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised ChatLinkRecord
     */
    constructor(value: ru.wolfofbad.links.domain.jooq.generated.tables.pojos.ChatLink?): this() {
        if (value != null) {
            this.chatId = value.chatId
            this.linkId = value.linkId
            this.lastUpdate = value.lastUpdate
            resetChangedOnNotNull()
        }
    }
}
