/*
 * This file is generated by jOOQ.
 */
package ru.wolfofbad.authorization.domain.jooq.generated


import javax.annotation.processing.Generated

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl

import ru.wolfofbad.authorization.domain.jooq.generated.tables.Chat
import ru.wolfofbad.authorization.domain.jooq.generated.tables.ChatLink
import ru.wolfofbad.authorization.domain.jooq.generated.tables.Link


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.18.13"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA: DefaultSchema = DefaultSchema()
    }

    /**
     * The table <code>CHAT</code>.
     */
    val CHAT: Chat get() = Chat.CHAT

    /**
     * The table <code>CHAT_LINK</code>.
     */
    val CHAT_LINK: ChatLink get() = ChatLink.CHAT_LINK

    /**
     * The table <code>LINK</code>.
     */
    val LINK: Link get() = Link.LINK

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Chat.CHAT,
        ChatLink.CHAT_LINK,
        Link.LINK
    )
}
